{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../../components/Layout\";\nimport { CardGroup, Card } from \"semantic-ui-react\"; // // import Patient from \"../../Ethereum/patient\";\n// import truncateMiddle from \"truncate-middle\";\n// // import header from \"../../components/header\";\n// import { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\";\n// // import web3 from \"../../Ethereum/web3\";\n// import { Link } from \"../../../routes\";\n// import { response } from \"express\";\n\nvar dataRead = /*#__PURE__*/function (_React$Component) {\n  _inherits(dataRead, _React$Component);\n\n  var _super = _createSuper(dataRead);\n\n  function dataRead() {\n    _classCallCheck(this, dataRead);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(dataRead, [{\n    key: \"renderData\",\n    value: function renderData() {\n      var referenceKey = this.props.referenceKey;\n      return __jsx(Card.Content, {\n        header: referenceKey,\n        meta: \"Friend\",\n        description: \"Elliot is a music producer living in Chicago.\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(CardGroup, null, __jsx(Card, null, this.renderData())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var referenceKey;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              referenceKey = props.query.referenceKey;\n              axios.get(\"http://localhost:5000/references/get/\".concat(referenceKey)).then(function (response) {\n                return console.log(response);\n              })[\"catch\"](function (error) {\n                return console.log(error);\n              });\n              console.log(response);\n              return _context.abrupt(\"return\", {\n                referenceKey: referenceKey\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return dataRead;\n}(React.Component);\n\nexport default dataRead;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/records/read.js"],"names":["React","axios","Layout","CardGroup","Card","dataRead","referenceKey","props","renderData","query","get","then","response","console","log","error","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGMC,Q;;;;;;;;;;;;;iCAYW;AAAA,UAELC,YAFK,GAGL,KAAKC,KAHA,CAELD,YAFK;AAKT,aACI,MAAC,IAAD,CAAM,OAAN;AACI,QAAA,MAAM,EAAEA,YADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,WAAW,EAAC;AAHhB,QADJ;AAQH;;;6BAGQ;AACL,aACI,MAAC,MAAD,QACI,MAAC,SAAD,QACI,MAAC,IAAD,QACK,KAAKE,UAAL,EADL,CADJ,CADJ,CADJ;AASH;;;oCApC4BD,K;;;;;;AACjBD,cAAAA,Y,GAAiBC,KAAK,CAACE,K,CAAvBH,Y;AACRL,cAAAA,KAAK,CAACS,GAAN,gDAAkDJ,YAAlD,GACKK,IADL,CACU,UAAAC,QAAQ;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAJ;AAAA,eADlB,WAEW,UAAAG,KAAK;AAAA,uBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,eAFhB;AAGAF,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;+CACO;AAAEN,gBAAAA,YAAY,EAAZA;AAAF,e;;;;;;;;;;;;EARQN,KAAK,CAACgB,S;;AAwC7B,eAAeX,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../../../components/Layout\";\r\nimport { CardGroup, Card } from \"semantic-ui-react\";\r\n// // import Patient from \"../../Ethereum/patient\";\r\n// import truncateMiddle from \"truncate-middle\";\r\n// // import header from \"../../components/header\";\r\n// import { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\";\r\n// // import web3 from \"../../Ethereum/web3\";\r\n// import { Link } from \"../../../routes\";\r\n// import { response } from \"express\";\r\n\r\n\r\nclass dataRead extends React.Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const { referenceKey } = props.query;\r\n        axios.get(`http://localhost:5000/references/get/${referenceKey}`)\r\n            .then(response => console.log(response))\r\n            .catch(error => console.log(error));\r\n        console.log(response)\r\n        return { referenceKey }\r\n\r\n    }\r\n\r\n    renderData() {\r\n        const {\r\n            referenceKey,\r\n        } = this.props\r\n\r\n        return (\r\n            <Card.Content\r\n                header={referenceKey}\r\n                meta='Friend'\r\n                description='Elliot is a music producer living in Chicago.'\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <CardGroup>\r\n                    <Card>\r\n                        {this.renderData()}\r\n                    </Card>\r\n                </CardGroup>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default dataRead;"]},"metadata":{},"sourceType":"module"}