{"ast":null,"code":"import React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Patient from \"../../Ethereum/patient\"; // import header from \"../../components/header\";\n\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../Ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nclass patientShow extends React.Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const patient = Patient(address);\n    const referencesCount = await patient.methods.GetReferences().call(); // const references = await Promise.all(\n    //     Array(parseInt(referencesCount))\n    //         .fill()\n    //         .map((element, index) => {\n    //             return patient.methods.data_references(index).call();\n    //         })\n    // );\n    // return { dataHash, TimeStamp }\n\n    console.log(referencesCount);\n  } // renderCards() {\n  //     const {\n  //         dataReference,\n  //         uploadTime,\n  //     } = this.props;\n  //     const items = [\n  //         {\n  //             header: dataReference,\n  //             meta: uploadTime,\n  //             description:\n  //                 \"to access the data click on the link at the top\",\n  //             style: { overflowWrap: \"break-word\" }\n  //         },\n  //     ];\n  //     return <Card.Group items={items} />;\n  // }\n  // render() {\n  //     return (\n  //         <Layout>\n  //             <Grid>\n  //                 <Grid.Column width={10}>\n  //                     <Grid.Row> {this.renderCards()} </Grid.Row>\n  //                     <Grid.Row>\n  //                         <Link route={`/patients/${this.props.address}/requests`}>\n  //                             <a>\n  //                                 <Button content=\"view Requests\" className=\"ui green button\" />\n  //                             </a>\n  //                         </Link>\n  //                     </Grid.Row>\n  //                 </Grid.Column>\n  //             </Grid>\n  //         </Layout>\n  //     );\n  // }\n\n\n}\n\nexport default patientShow;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/show.js"],"names":["React","Layout","Patient","Card","Grid","Button","web3","Link","patientShow","Component","getInitialProps","props","address","query","patient","referencesCount","methods","GetReferences","call","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACtC,eAAaC,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,OAAO,GAAGZ,OAAO,CAACU,OAAD,CAAvB;AAEA,UAAMG,eAAe,GAAG,MAAMD,OAAO,CAACE,OAAR,CAAgBC,aAAhB,GAAgCC,IAAhC,EAA9B,CAJgC,CAKhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACH,GAfqC,CAgBtC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlDsC;;AAoD1C,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Patient from \"../../Ethereum/patient\";\r\n// import header from \"../../components/header\";\r\nimport { Card, Grid, Button } from \"semantic-ui-react\";\r\nimport web3 from \"../../Ethereum/web3\";\r\nimport { Link } from \"../../routes\";\r\n\r\nclass patientShow extends React.Component {\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n        const patient = Patient(address);\r\n\r\n        const referencesCount = await patient.methods.GetReferences().call();\r\n        // const references = await Promise.all(\r\n        //     Array(parseInt(referencesCount))\r\n        //         .fill()\r\n        //         .map((element, index) => {\r\n        //             return patient.methods.data_references(index).call();\r\n        //         })\r\n        // );\r\n        // return { dataHash, TimeStamp }\r\n        console.log(referencesCount);\r\n    }\r\n    // renderCards() {\r\n    //     const {\r\n    //         dataReference,\r\n    //         uploadTime,\r\n    //     } = this.props;\r\n\r\n    //     const items = [\r\n    //         {\r\n    //             header: dataReference,\r\n    //             meta: uploadTime,\r\n    //             description:\r\n    //                 \"to access the data click on the link at the top\",\r\n    //             style: { overflowWrap: \"break-word\" }\r\n    //         },\r\n    //     ];\r\n    //     return <Card.Group items={items} />;\r\n    // }\r\n    // render() {\r\n    //     return (\r\n    //         <Layout>\r\n    //             <Grid>\r\n    //                 <Grid.Column width={10}>\r\n    //                     <Grid.Row> {this.renderCards()} </Grid.Row>\r\n    //                     <Grid.Row>\r\n    //                         <Link route={`/patients/${this.props.address}/requests`}>\r\n    //                             <a>\r\n    //                                 <Button content=\"view Requests\" className=\"ui green button\" />\r\n    //                             </a>\r\n    //                         </Link>\r\n    //                     </Grid.Row>\r\n    //                 </Grid.Column>\r\n    //             </Grid>\r\n    //         </Layout>\r\n    //     );\r\n    // }\r\n}\r\nexport default patientShow;\r\n"]},"metadata":{},"sourceType":"module"}