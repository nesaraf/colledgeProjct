{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Button, Input, Form, Message } from \"semantic-ui-react\";\nimport factory from \"../../Ethereum/factory\";\nimport web3 from \"../../Ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass NewPatient extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      patientAddress: \"\",\n      doctorAddress: \"\",\n      localServerAddress: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errormessage: \"\"\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.Register(this.state.patientAddress, this.state.doctorAddress, this.state.localServerAddress).send({\n          from: accounts[0]\n        });\n        Router.pushRoute(\"/\");\n      } catch (err) {\n        this.setState({\n          errormessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Creat a Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errormessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum Contribution\"), __jsx(Input, {\n      label: \"Address of Patient\",\n      value: this.state.patientAddress,\n      onChange: event => this.setState({\n        patientAddress: event.target.value\n      })\n    }), __jsx(\"br\", null), __jsx(Input, {\n      label: \"Address of doctor\",\n      value: this.state.doctorAddress,\n      onChange: event => this.setState({\n        doctorAddress: event.target.value\n      })\n    }), __jsx(\"br\", null), __jsx(Input, {\n      label: \"Address of local Server\",\n      value: this.state.localServerAddress,\n      onChange: event => this.setState({\n        localServerAddress: event.target.value\n      })\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true,\n      type: \"submit\"\n    }, \"Create\"), __jsx(Message, {\n      error: true,\n      header: \"OOPS!\",\n      content: this.state.errormessage\n    }))));\n  }\n\n}\n\nexport default NewPatient;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/newPatient.js"],"names":["React","Component","Layout","Button","Input","Form","Message","factory","web3","Router","NewPatient","patientAddress","doctorAddress","localServerAddress","loading","event","preventDefault","setState","errormessage","accounts","eth","getAccounts","methods","Register","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Button, Input, Form, Message } from \"semantic-ui-react\";\r\nimport factory from \"../../Ethereum/factory\";\r\nimport web3 from \"../../Ethereum/web3\";\r\nimport { Router } from \"../../routes\";\r\n\r\nclass NewPatient extends Component {\r\n    state = {\r\n        patientAddress: \"\",\r\n        doctorAddress: \"\",\r\n        localServerAddress: \"\",\r\n        loading: false\r\n    };\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true, errormessage: \"\" });\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            await factory.methods.Register(\r\n                this.state.patientAddress,\r\n                this.state.doctorAddress,\r\n                this.state.localServerAddress).send({\r\n                    from: accounts[0]\r\n                });\r\n            Router.pushRoute(\"/\");\r\n        } catch (err) {\r\n            this.setState({ errormessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <h3>Creat a Campaign</h3>\r\n                    <Form onSubmit={this.onSubmit} error={!!this.state.errormessage}>\r\n                        <Form.Field>\r\n                            <label>Minimum Contribution</label>\r\n                            <Input\r\n                                label=\"Address of Patient\"\r\n                                value={this.state.patientAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ patientAddress: event.target.value })\r\n                                }\r\n                            /><br />\r\n                            <Input\r\n                                label=\"Address of doctor\"\r\n                                value={this.state.doctorAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ doctorAddress: event.target.value })\r\n                                }\r\n                            /><br />\r\n                            <Input\r\n                                label=\"Address of local Server\"\r\n                                value={this.state.localServerAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ localServerAddress: event.target.value })\r\n                                }\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Button loading={this.state.loading} primary type=\"submit\">\r\n                            Create\r\n            </Button>\r\n                        <Message error header=\"OOPS!\" content={this.state.errormessage} />\r\n                    </Form>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default NewPatient;"]},"metadata":{},"sourceType":"module"}