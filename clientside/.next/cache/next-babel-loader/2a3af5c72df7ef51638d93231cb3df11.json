{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport axios from \"axios\";\nimport Layout from \"../../../components/Layout\";\nimport { CardGroup, Card } from \"semantic-ui-react\"; // // import Patient from \"../../Ethereum/patient\";\n\nimport truncateMiddle from \"truncate-middle\"; // // import header from \"../../components/header\";\n// import { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\";\n// // import web3 from \"../../Ethereum/web3\";\n// import { Link } from \"../../../routes\";\n// import { response } from \"express\";\n\nclass dataRead extends React.Component {\n  static async getInitialProps(props) {\n    const {\n      referenceKey\n    } = props.query;\n\n    function getData(key) {\n      return axios.get(`http://localhost:5000/references/get/${key}`).then(res => {\n        const item = res;\n        return item.data;\n      }).catch(error => console.log(error));\n    }\n\n    const refData = await getData(referenceKey);\n    return {\n      referenceKey,\n      refData\n    };\n  }\n\n  renderData() {\n    const {\n      referenceKey,\n      refData\n    } = this.props;\n    return __jsx(Card.Content, {\n      header: truncateMiddle(refData.dataHash, 5, 5, '.....'),\n      meta: refData.createdAt,\n      description: refData.data\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(CardGroup, null, __jsx(Card, null, this.renderData())));\n  }\n\n}\n\nexport default dataRead;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/records/read.js"],"names":["React","axios","Layout","CardGroup","Card","truncateMiddle","dataRead","Component","getInitialProps","props","referenceKey","query","getData","key","get","then","res","item","data","catch","error","console","log","refData","renderData","dataHash","createdAt","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAEnC,eAAaC,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAmBD,KAAK,CAACE,KAA/B;;AAEA,aAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAElB,aAAOZ,KAAK,CAACa,GAAN,CAAW,wCAAuCD,GAAI,EAAtD,EACFE,IADE,CACGC,GAAG,IAAI;AACT,cAAMC,IAAI,GAAGD,GAAb;AACA,eAAOC,IAAI,CAACC,IAAZ;AACH,OAJE,EAIAC,KAJA,CAIMC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJf,CAAP;AAMH;;AACD,UAAMG,OAAO,GAAG,MAAMX,OAAO,CAACF,YAAD,CAA7B;AACA,WAAO;AAAEA,MAAAA,YAAF;AAAgBa,MAAAA;AAAhB,KAAP;AAEH;;AAEDC,EAAAA,UAAU,GAAG;AACT,UAAM;AACFd,MAAAA,YADE;AAEFa,MAAAA;AAFE,QAGF,KAAKd,KAHT;AAKA,WACI,MAAC,IAAD,CAAM,OAAN;AACI,MAAA,MAAM,EAAEJ,cAAc,CAACkB,OAAO,CAACE,QAAT,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,OAAzB,CAD1B;AAEI,MAAA,IAAI,EAAEF,OAAO,CAACG,SAFlB;AAGI,MAAA,WAAW,EAAEH,OAAO,CAACL;AAHzB,MADJ;AAQH;;AAGDS,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,MAAC,SAAD,QACI,MAAC,IAAD,QACK,KAAKH,UAAL,EADL,CADJ,CADJ,CADJ;AASH;;AA9CkC;;AAgDvC,eAAelB,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../../../components/Layout\";\r\nimport { CardGroup, Card } from \"semantic-ui-react\";\r\n\r\n// // import Patient from \"../../Ethereum/patient\";\r\nimport truncateMiddle from \"truncate-middle\";\r\n// // import header from \"../../components/header\";\r\n// import { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\";\r\n// // import web3 from \"../../Ethereum/web3\";\r\n// import { Link } from \"../../../routes\";\r\n// import { response } from \"express\";\r\n\r\n\r\nclass dataRead extends React.Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const { referenceKey } = props.query;\r\n\r\n        function getData(key) {\r\n\r\n            return axios.get(`http://localhost:5000/references/get/${key}`)\r\n                .then(res => {\r\n                    const item = res;\r\n                    return item.data;\r\n                }).catch(error => console.log(error));\r\n\r\n        }\r\n        const refData = await getData(referenceKey)\r\n        return { referenceKey, refData }\r\n\r\n    }\r\n\r\n    renderData() {\r\n        const {\r\n            referenceKey,\r\n            refData\r\n        } = this.props\r\n\r\n        return (\r\n            <Card.Content\r\n                header={truncateMiddle(refData.dataHash, 5, 5, '.....')}\r\n                meta={refData.createdAt}\r\n                description={refData.data}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <CardGroup>\r\n                    <Card>\r\n                        {this.renderData()}\r\n                    </Card>\r\n                </CardGroup>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default dataRead;"]},"metadata":{},"sourceType":"module"}