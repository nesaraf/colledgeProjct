{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Button, Input, Form, Message, Icon } from \"semantic-ui-react\";\n\nvar addRecord = /*#__PURE__*/function (_React$Component) {\n  _inherits(addRecord, _React$Component);\n\n  var _super = _createSuper(addRecord);\n\n  function addRecord() {\n    var _this;\n\n    _classCallCheck(this, addRecord);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      passworrd: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // hash the data\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(addRecord, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(Input, {\n        label: \"Email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        type: \"email\"\n      }, __jsx(Icon, {\n        name: \"at\"\n      })), __jsx(Input, {\n        label: \"Password\",\n        value: this.state.password,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        },\n        type: \"password\"\n      })), __jsx(Button, {\n        loading: this.state.loading,\n        className: \"btn btn-primary\"\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return addRecord;\n}(React.Component);\n\nexport default addRecord;","map":{"version":3,"sources":["D:/Project/Local server/pages/auth/login.js"],"names":["React","axios","Button","Input","Form","Message","Icon","addRecord","email","passworrd","loading","event","preventDefault","onSubmit","state","setState","target","value","password","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,IAAvC,QAAmD,mBAAnD;;IAGMC,S;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,K;;;0EAMG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAEPA,gBAAAA,KAAK,CAACC,cAAN,GAFO,CAGP;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAMF;AAAA;;AACL,aACI,MAAC,MAAD,QACI,mBACI,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,KAAD;AACI,QAAA,KAAK,EAAC,OADV;AAEI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWN,KAFtB;AAGI,QAAA,QAAQ,EAAE,kBAAAG,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEP,YAAAA,KAAK,EAAEG,KAAK,CAACK,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA,SAHnB;AAGqE,QAAA,IAAI,EAAC;AAH1E,SAKI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QALJ,CADJ,EAOI,MAAC,KAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,QAFtB;AAGI,QAAA,QAAQ,EAAE,kBAAAP,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEG,YAAAA,QAAQ,EAAEP,KAAK,CAACK,MAAN,CAAaC;AAAzB,WAAd,CAAJ;AAAA,SAHnB;AAII,QAAA,IAAI,EAAC;AAJT,QAPJ,CADJ,EAcI,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWJ,OAA5B;AAAqC,QAAA,SAAS,EAAC;AAA/C,kBAdJ,CADJ,CADJ,CADJ;AAsBH;;;;EArCmBV,KAAK,CAACmB,S;;AAuC9B,eAAeZ,SAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Input, Form, Message, Icon } from \"semantic-ui-react\";\r\n\r\n\r\nclass addRecord extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        passworrd: '',\r\n        loading: false,\r\n    }\r\n\r\n    onSubmit = async event => {\r\n\r\n        event.preventDefault();\r\n        // hash the data\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                label=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={event => this.setState({ email: event.target.value })} type=\"email\">\r\n\r\n                                <Icon name='at' /></Input>\r\n                            <Input\r\n                                label=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={event => this.setState({ password: event.target.value })}\r\n                                type=\"password\" />\r\n                        </Form.Field>\r\n                        <Button loading={this.state.loading} className=\"btn btn-primary\">Submit</Button>\r\n                    </Form>\r\n                </div>\r\n            </Layout >\r\n        );\r\n    }\r\n}\r\nexport default addRecord;"]},"metadata":{},"sourceType":"module"}