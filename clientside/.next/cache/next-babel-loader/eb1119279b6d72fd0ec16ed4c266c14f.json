{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport Layout from \"../../components/Layout\";\nimport { Button, Input, Form, Message, Icon } from \"semantic-ui-react\";\nimport Router from 'next/router';\n\nclass addRecord extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      passworrd: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      this.state.loading = true;\n      event.preventDefault(); // hash the data\n\n      const {\n        email,\n        password\n      } = this.state;\n      const data = {\n        email: email,\n        password: password\n      };\n      axios.post('http://localhost:5000/users/api/login', data).then(res => {\n        localStorage.setItem('19divoc', res.data.token, {\n          httpOnly: true\n        });\n        this.resetForm();\n        Router.back();\n      }).catch(error => console.log(error));\n    });\n  }\n\n  componentDidMount() {\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.setState({\n      email: '',\n      password: '',\n      loading: false\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(Input, {\n      label: \"Email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      type: \"email\"\n    }), __jsx(Input, {\n      label: \"Password\",\n      value: this.state.password,\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      type: \"password\"\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      className: \"btn btn-primary\"\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default addRecord;","map":{"version":3,"sources":["D:/Project/clientside/pages/auth/login.js"],"names":["React","axios","Layout","Button","Input","Form","Message","Icon","Router","addRecord","Component","email","passworrd","loading","event","state","preventDefault","password","data","post","then","res","localStorage","setItem","token","httpOnly","resetForm","back","catch","error","console","log","componentDidMount","setState","render","onSubmit","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAIA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAK5B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAL4B;;AAAA,sCAiBzB,MAAMC,KAAN,IAAe;AACtB,WAAKC,KAAL,CAAWF,OAAX,GAAqB,IAArB;AAEAC,MAAAA,KAAK,CAACE,cAAN,GAHsB,CAItB;;AACA,YAAM;AAAEL,QAAAA,KAAF;AAASM,QAAAA;AAAT,UAAsB,KAAKF,KAAjC;AACA,YAAMG,IAAI,GAAG;AACTP,QAAAA,KAAK,EAAEA,KADE;AAETM,QAAAA,QAAQ,EAAEA;AAFD,OAAb;AAIAhB,MAAAA,KAAK,CAACkB,IAAN,CAAW,uCAAX,EAAoDD,IAApD,EACEE,IADF,CACOC,GAAG,IAAI;AACVC,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAG,CAACH,IAAJ,CAASM,KAAzC,EAAgD;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAhD;AACA,aAAKC,SAAL;AACAlB,QAAAA,MAAM,CAACmB,IAAP;AAEH,OAND,EAMGC,KANH,CAMSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANlB;AAQH,KAnCmC;AAAA;;AACpCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,SAAL;AACH;;AAODA,EAAAA,SAAS,GAAG;AACR,SAAKO,QAAL,CAAc;AACVtB,MAAAA,KAAK,EAAE,EADG;AAEVM,MAAAA,QAAQ,EAAE,EAFA;AAGVJ,MAAAA,OAAO,EAAE;AAHC,KAAd;AAKH;;AAoBDqB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,mBACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACI,MAAC,IAAD,CAAM,KAAN,QACI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWJ,KAFtB;AAGI,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKmB,QAAL,CAAc;AAAEtB,QAAAA,KAAK,EAAEG,KAAK,CAACsB,MAAN,CAAaC;AAAtB,OAAd,CAHvB;AAGqE,MAAA,IAAI,EAAC;AAH1E,MADJ,EAMI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,QAFtB;AAGI,MAAA,QAAQ,EAAEH,KAAK,IAAI,KAAKmB,QAAL,CAAc;AAAEhB,QAAAA,QAAQ,EAAEH,KAAK,CAACsB,MAAN,CAAaC;AAAzB,OAAd,CAHvB;AAII,MAAA,IAAI,EAAC;AAJT,MANJ,CADJ,EAaI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWF,OAA5B;AAAqC,MAAA,SAAS,EAAC;AAA/C,gBAbJ,CADJ,CADJ,CADJ;AAqBH;;AA1DmC;;AA4DxC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Layout from \"../../components/Layout\";\r\nimport { Button, Input, Form, Message, Icon } from \"semantic-ui-react\";\r\nimport Router from 'next/router';\r\n\r\n\r\n\r\nclass addRecord extends React.Component {\r\n    componentDidMount() {\r\n        this.resetForm();\r\n    }\r\n\r\n    state = {\r\n        email: '',\r\n        passworrd: '',\r\n        loading: false,\r\n    }\r\n    resetForm() {\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            loading: false\r\n        })\r\n    }\r\n    onSubmit = async event => {\r\n        this.state.loading = true;\r\n\r\n        event.preventDefault();\r\n        // hash the data\r\n        const { email, password } = this.state;\r\n        const data = {\r\n            email: email,\r\n            password: password\r\n        }\r\n        axios.post('http://localhost:5000/users/api/login', data\r\n        ).then(res => {\r\n            localStorage.setItem('19divoc', res.data.token, { httpOnly: true });\r\n            this.resetForm();\r\n            Router.back();\r\n\r\n        }).catch(error => console.log(error));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                label=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={event => this.setState({ email: event.target.value })} type=\"email\" />\r\n\r\n                            <Input\r\n                                label=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={event => this.setState({ password: event.target.value })}\r\n                                type=\"password\" />\r\n                        </Form.Field>\r\n                        <Button loading={this.state.loading} className=\"btn btn-primary\">Submit</Button>\r\n                    </Form>\r\n                </div>\r\n            </Layout >\r\n        );\r\n    }\r\n}\r\nexport default addRecord;"]},"metadata":{},"sourceType":"module"}