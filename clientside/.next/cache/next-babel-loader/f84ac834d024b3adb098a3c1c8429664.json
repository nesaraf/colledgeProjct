{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Button, Input, Form, Message } from \"semantic-ui-react\";\nimport factory from \"../../Ethereum/factory\";\nimport web3 from \"../../Ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nvar NewPatient = /*#__PURE__*/function (_Component) {\n  _inherits(NewPatient, _Component);\n\n  var _super = _createSuper(NewPatient);\n\n  function NewPatient() {\n    var _this;\n\n    _classCallCheck(this, NewPatient);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      patientAddress: \"\",\n      doctorAddress: \"\",\n      localServerAddress: \"0xB47cCb9ee8084cFc61D738625b99C9c0Fd92E391\",\n      loading: false,\n      testDate: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errormessage: \"\"\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(factory.methods.Register(_this.state.patientAddress, _this.state.doctorAddress, _this.state.localServerAddress).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              Router.pushRoute(\"/\");\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errormessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 11]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(NewPatient, [{\n    key: \"renderDate\",\n    value: function renderDate() {\n      var tempDate = new Date();\n      var date = tempDate.getMonth() + 1 + '/' + tempDate.getDate() + '/' + tempDate.getFullYear() + ' at ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n      this.state.testDate = date;\n      return __jsx(\"p\", null, this.state.testDate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Creat a Campaign\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errormessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum Contribution\"), __jsx(Input, {\n        label: \"Address of Patient\",\n        value: this.state.patientAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            patientAddress: event.target.value\n          });\n        }\n      }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Input, {\n        label: \"Address of doctor\",\n        value: this.state.doctorAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            doctorAddress: event.target.value\n          });\n        }\n      }), __jsx(\"br\", null), __jsx(\"br\", null), this.renderDate(), __jsx(\"p\", null, \"kjhkj\")), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true,\n        type: \"submit\"\n      }, \"Create\"), __jsx(Message, {\n        error: true,\n        header: \"OOPS!\",\n        content: this.state.errormessage\n      }))));\n    }\n  }]);\n\n  return NewPatient;\n}(Component);\n\nexport default NewPatient;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/newPatient.js"],"names":["React","Component","Layout","Button","Input","Form","Message","factory","web3","Router","NewPatient","patientAddress","doctorAddress","localServerAddress","loading","testDate","event","preventDefault","setState","errormessage","eth","getAccounts","accounts","methods","Register","state","send","from","pushRoute","message","tempDate","Date","date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","onSubmit","target","value","renderDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Button, Input, Form, Message } from \"semantic-ui-react\";\r\nimport factory from \"../../Ethereum/factory\";\r\nimport web3 from \"../../Ethereum/web3\";\r\nimport { Router } from \"../../routes\";\r\n\r\nclass NewPatient extends Component {\r\n    state = {\r\n        patientAddress: \"\",\r\n        doctorAddress: \"\",\r\n        localServerAddress: \"0xB47cCb9ee8084cFc61D738625b99C9c0Fd92E391\",\r\n        loading: false,\r\n        testDate: ''\r\n    };\r\n    renderDate() {\r\n\r\n        var tempDate = new Date();\r\n        var date = (tempDate.getMonth() + 1) + '/' + tempDate.getDate() + '/' + tempDate.getFullYear() + ' at ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\r\n        this.state.testDate = date;\r\n        return (\r\n            <p>{this.state.testDate}</p>\r\n        );\r\n    }\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({ loading: true, errormessage: \"\" });\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            await factory.methods.Register(\r\n                this.state.patientAddress,\r\n                this.state.doctorAddress,\r\n                this.state.localServerAddress).send({\r\n                    from: accounts[0]\r\n                });\r\n            Router.pushRoute(\"/\");\r\n        } catch (err) {\r\n            this.setState({ errormessage: err.message });\r\n        }\r\n        this.setState({ loading: false });\r\n    };\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <h3>Creat a Campaign</h3>\r\n                    <Form onSubmit={this.onSubmit} error={!!this.state.errormessage}>\r\n                        <Form.Field>\r\n                            <label>Minimum Contribution</label>\r\n                            <Input\r\n                                label=\"Address of Patient\"\r\n                                value={this.state.patientAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ patientAddress: event.target.value })\r\n                                }\r\n                            /><br /><br />\r\n                            <Input\r\n                                label=\"Address of doctor\"\r\n                                value={this.state.doctorAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ doctorAddress: event.target.value })\r\n                                }\r\n                            /><br /><br />\r\n                            {this.renderDate()}<p>kjhkj</p>\r\n                            {/* <Input\r\n                                label=\"Address of local Server\"\r\n                                value={this.state.localServerAddress}\r\n                                onChange={event =>\r\n                                    this.setState({ localServerAddress: event.target.value })\r\n                                }\r\n                            /> */}\r\n                        </Form.Field>\r\n\r\n                        <Button loading={this.state.loading} primary type=\"submit\">\r\n                            Create\r\n            </Button>\r\n                        <Message error header=\"OOPS!\" content={this.state.errormessage} />\r\n                    </Form>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default NewPatient;"]},"metadata":{},"sourceType":"module"}