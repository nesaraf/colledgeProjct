{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Patient from \"../../Ethereum/patient\"; // import header from \"../../components/header\";\n\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../Ethereum/web3\";\nimport { Link } from \"../../routes\";\n\nclass patientShow extends React.Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const patient = Patient(address);\n    const referencesCount = await patient.methods.GetReferences().call();\n    const references = await Promise.all(Array(parseInt(referencesCount)).fill().map((element, index) => {\n      return patient.methods.data_references(index).call();\n    }));\n    console.log(references);\n    return {\n      references\n    };\n  }\n\n  renderCards() {\n    return this.props.references.map((link, index) => {\n      return __jsx(\"div\", {\n        class: \"ui card\"\n      }, __jsx(\"div\", {\n        class: \"content\"\n      }, __jsx(\"div\", {\n        class: \"header\"\n      }, link.DataHash), __jsx(\"div\", {\n        class: \"meta\"\n      }, \"ROI: 34%\"), __jsx(\"div\", {\n        class: \"description\"\n      }, \"Bring to the table win-win survival strategies to ensure proactive domination.\")));\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(Grid.Row, null, \" \", this.renderCards(), \" \"), __jsx(Grid.Row, null))));\n  }\n\n}\n\nexport default patientShow;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/show.js"],"names":["React","Layout","Patient","Card","Grid","Button","web3","Link","patientShow","Component","getInitialProps","props","address","query","patient","referencesCount","methods","GetReferences","call","references","Promise","all","Array","parseInt","fill","map","element","index","data_references","console","log","renderCards","link","DataHash","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACtC,eAAaC,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AACA,UAAMC,OAAO,GAAGZ,OAAO,CAACU,OAAD,CAAvB;AAGA,UAAMG,eAAe,GAAG,MAAMD,OAAO,CAACE,OAAR,CAAgBC,aAAhB,GAAgCC,IAAhC,EAA9B;AACA,UAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACR,eAAD,CAAT,CAAL,CACKS,IADL,GAEKC,GAFL,CAES,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrB,aAAOb,OAAO,CAACE,OAAR,CAAgBY,eAAhB,CAAgCD,KAAhC,EAAuCT,IAAvC,EAAP;AACH,KAJL,CADqB,CAAzB;AAQAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACA,WAAO;AACHA,MAAAA;AADG,KAAP;AAIH;;AACDY,EAAAA,WAAW,GAAG;AAEV,WAAO,KAAKpB,KAAL,CAAWQ,UAAX,CAAsBM,GAAtB,CAA0B,CAACO,IAAD,EAAOL,KAAP,KAAiB;AAC9C,aACI;AAAK,QAAA,KAAK,EAAC;AAAX,SACI;AAAK,QAAA,KAAK,EAAC;AAAX,SACI;AAAK,QAAA,KAAK,EAAC;AAAX,SAAqBK,IAAI,CAACC,QAA1B,CADJ,EAEI;AAAK,QAAA,KAAK,EAAC;AAAX,oBAFJ,EAGI;AAAK,QAAA,KAAK,EAAC;AAAX,0FAHJ,CADJ,CADJ;AAWH,KAZM,CAAP;AAcH;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAApB,OACI,MAAC,IAAD,CAAM,GAAN,aAAY,KAAKH,WAAL,EAAZ,MADJ,EAEI,MAAC,IAAD,CAAM,GAAN,OAFJ,CADJ,CADJ,CADJ;AAgBH;;AAvDqC;;AAyD1C,eAAevB,WAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Patient from \"../../Ethereum/patient\";\r\n// import header from \"../../components/header\";\r\nimport { Card, Grid, Button } from \"semantic-ui-react\";\r\nimport web3 from \"../../Ethereum/web3\";\r\nimport { Link } from \"../../routes\";\r\n\r\nclass patientShow extends React.Component {\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n        const patient = Patient(address);\r\n\r\n\r\n        const referencesCount = await patient.methods.GetReferences().call();\r\n        const references = await Promise.all(\r\n            Array(parseInt(referencesCount))\r\n                .fill()\r\n                .map((element, index) => {\r\n                    return patient.methods.data_references(index).call();\r\n                })\r\n        );\r\n\r\n        console.log(references);\r\n        return {\r\n            references\r\n        };\r\n\r\n    }\r\n    renderCards() {\r\n\r\n        return this.props.references.map((link, index) => {\r\n            return (\r\n                <div class=\"ui card\">\r\n                    <div class=\"content\">\r\n                        <div class=\"header\">{link.DataHash}</div>\r\n                        <div class=\"meta\">ROI: 34%</div>\r\n                        <div class=\"description\">\r\n                            Bring to the table win-win survival strategies to ensure proactive domination.\r\n                  </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        <Grid.Row> {this.renderCards()} </Grid.Row>\r\n                        <Grid.Row>\r\n                            {/* <Link route={`/patients/${this.props.address}/requests`}>\r\n                                <a>\r\n                                    <Button content=\"view Requests\" className=\"ui green button\" />\r\n                                </a>\r\n                            </Link> */}\r\n                        </Grid.Row>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default patientShow;\r\n"]},"metadata":{},"sourceType":"module"}