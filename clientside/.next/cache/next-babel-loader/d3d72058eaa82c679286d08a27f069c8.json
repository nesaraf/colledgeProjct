{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\"; // import Patient from \"../../Ethereum/patient\";\n\nimport truncateMiddle from \"truncate-middle\"; // import header from \"../../components/header\";\n\nimport { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\"; // import web3 from \"../../Ethereum/web3\";\n\nimport { Link } from \"../../../routes\";\n\nvar dataRead = /*#__PURE__*/function (_React$Component) {\n  _inherits(dataRead, _React$Component);\n\n  var _super = _createSuper(dataRead);\n\n  function dataRead() {\n    _classCallCheck(this, dataRead);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(dataRead, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h2\", null, \" this is the read component\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var address;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              address = props.query.address;\n              console.log(address);\n              return _context.abrupt(\"return\", {\n                address: address\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return dataRead;\n}(React.Component);\n\nexport default dataRead;","map":{"version":3,"sources":["D:/Project/Local server/pages/patients/records/read.js"],"names":["React","Layout","truncateMiddle","Card","Table","Grid","Button","Popup","Link","dataRead","props","address","query","console","log","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,KAApC,QAAiD,mBAAjD,C,CACA;;AACA,SAASC,IAAT,QAAqB,iBAArB;;IAGMC,Q;;;;;;;;;;;;;6BASO;AACL,aACI,MAAC,MAAD,QACI,mBACI,gDADJ,CADJ,CADJ;AAOH;;;oCAf4BC,K;;;;;;AACjBC,cAAAA,O,GAAYD,KAAK,CAACE,K,CAAlBD,O;AAERE,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;+CACO;AAAEA,gBAAAA,OAAO,EAAPA;AAAF,e;;;;;;;;;;;;EANQX,KAAK,CAACe,S;;AAmB7B,eAAeN,QAAf","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../../../components/Layout\";\r\n// import Patient from \"../../Ethereum/patient\";\r\nimport truncateMiddle from \"truncate-middle\";\r\n// import header from \"../../components/header\";\r\nimport { Card, Table, Grid, Button, Popup } from \"semantic-ui-react\";\r\n// import web3 from \"../../Ethereum/web3\";\r\nimport { Link } from \"../../../routes\";\r\n\r\n\r\nclass dataRead extends React.Component {\r\n\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n\r\n        console.log(address);\r\n        return { address }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <div>\r\n                    <h2> this is the read component</h2>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default dataRead;"]},"metadata":{},"sourceType":"module"}